{"version":3,"sources":["features/user.ts","domains/github/services/config.ts","domains/github/services/get-members.ts","domains/github/models/user.ts","components/templates/Demo.tsx","components/templates/TreeView01.tsx","components/templates/GenericTemplate.tsx","components/pages/ProductPage.tsx","components/templates/Header.tsx","components/templates/Menu.tsx","data/org-codes.ts","containers/templates/TreeView01.tsx","components/templates/Footer.tsx","components/pages/HomePage.tsx","hooks/use-get-members.ts","containers/templates/Demo.tsx","components/pages/NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userSlice","createSlice","name","initialState","users","orgCode","reducers","membersGotten","state","action","payload","users2","isLoading","error222","membersClear","DEFAULT_API_OPTIONS","prefixUrl","timeout","hooks","afterResponse","_request","_options","response","a","Blob","JSON","camelcaseKeys","json","stringify","type","body","headers","status","statusText","init","Response","getMembers","options","mergedOptions","ky","get","members","some","arg","u","login","id","nodeId","avatarUrl","gravatarId","url","htmlUrl","followersUrl","followingUrl","gistsUrl","starredUrl","subscriptionsUrl","organizationsUrl","reposUrl","eventsUrl","receivedEventsUrl","siteAdmin","isUser","Error","columns","field","headerName","width","description","sortable","valueGetter","params","getValue","Demo","style","height","rows","pageSize","checkboxSelection","disableColumnMenu","MinusSquare","props","SvgIcon","fontSize","d","PlusSquare","CloseSquare","className","TransitionComponent","useSpring","from","opacity","transform","to","in","div","Collapse","StyledTreeItem","withStyles","theme","createStyles","iconContainer","group","marginLeft","paddingLeft","borderLeft","fade","palette","text","primary","TreeItem","useStyles","makeStyles","root","flexGrow","maxWidth","borderRight","TreeView01","orgCodes","useState","setOrgCode","setIsLoading","useSelector","dispatch","useDispatch","useEffect","isUnmounted","actions","load","classes","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","label","onLabelClick","onClick","map","index","position","top","createMuiTheme","typography","fontFamily","join","main","colors","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","pageTitle","marginBottom","spacing","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","link","textDecoration","color","secondary","test1","GenericTemplate","children","React","createData","category","weight","price","table","minWidth","ProductPage","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","minHeight","ButtonAppBar","AppBar","Toolbar","Typography","variant","Button","TabPanel","value","other","role","hidden","aria-labelledby","Box","p","border","a11yProps","backgroundColor","background","ScrollableTabsButtonAuto","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","Tab","EnhancedHome","bottom","textAlign","ButtonAppFooterBar","HomePage","useGetMembers","EnhancedMembers","useParams","usemembersGotten","NotFound","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cfad8f7.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from 'domains/github';\n\n// export type UserState = { users: User[] }; // User型配列のusers(type: UserState)がStoreに格納される\n// const initialState: UserState = { users: [] };\n\n// export const userSlice = createSlice({\n//   name: 'user',\n//   initialState,\n//   reducers: {\n//     membersGotten: (state, action: PayloadAction<{ users2: User[] }>) => ({\n//       ...state,\n//       users: action.payload.users2,\n//       isLoading: false,\n//       error222: null,\n//       orgCOde: ''\n//     }),\n//     membersClear: (state) => ({\n//       ...state,\n//       users: [],\n//       isLoading: false,\n//       error222: null,\n//     }),\n//   },\n// });\n\nexport type UserState = { users: User[] }; // User型配列のusers(type: UserState)がStoreに格納される\nconst initialState: UserState = { users: [] };\n\nexport type MultiState = {\n  users: User[];\n  orgCode: string;\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: { users: [], orgCode: \"\" } as MultiState,\n  reducers: {\n    membersGotten: (state, action: PayloadAction<{ users2: User[], orgCode: string }>) => ({\n      ...state,\n      users: action.payload.users2,\n      isLoading: false,\n      error222: null,\n      orgCode: action.payload.orgCode\n    }),\n    membersClear: (state) => ({\n      ...state,\n      users: [],\n      isLoading: false,\n      error222: null,\n    }),\n  },\n});\n","/* eslint-disable import/prefer-default-export */\nimport { Options, NormalizedOptions } from 'ky';\nimport camelcaseKeys from 'camelcase-keys';\n\nexport const DEFAULT_API_OPTIONS: Options = {\n  prefixUrl: 'https://api.github.com',\n  timeout: 7000,\n  // retry: 2,\n  hooks: {\n    afterResponse: [\n      async (\n        _request: Request,\n        _options: NormalizedOptions,\n        response: Response,\n      ): Promise<Response> => {\n        const body = new Blob(\n          [JSON.stringify(camelcaseKeys(await response.json()), null, 2)],\n          { type: 'application/json' },\n        );\n        const { headers, status, statusText } = response;\n        const init = { headers, status, statusText };\n\n        return new Response(body, init);\n      },\n    ],\n  },\n};\n","import ky, { Options } from 'ky';\nimport { DEFAULT_API_OPTIONS } from './config';\nimport { isUsers, User } from '../models/user';\n\nconst getMembers = async (\n  orgCode: string,\n  options?: Options,\n): Promise<User[]> => {\n  const mergedOptions = {\n    ...DEFAULT_API_OPTIONS,\n    ...options,\n  };\n  const response = await ky.get(`orgs/${orgCode}/members`, mergedOptions);\n  const members = (await response.json()) as unknown[];\n\n  if (!isUsers(members)) {\n    throw Error('API type error');\n  }\n\n  return members;\n};\n\nexport default getMembers;\n","export type User = {\n  login: string;\n  id: number;\n  nodeId: string;\n  avatarUrl: string;\n  gravatarId: string;\n  url: string;\n  htmlUrl: string;\n  followersUrl: string;\n  followingUrl: string;\n  gistsUrl: string;\n  starredUrl: string;\n  subscriptionsUrl: string;\n  organizationsUrl: string;\n  reposUrl: string;\n  eventsUrl: string;\n  receivedEventsUrl: string;\n  type: string;\n  siteAdmin: boolean;\n};\n\nconst isUser = (arg: unknown): arg is User => {\n  const u = arg as User;\n\n  return (\n    typeof u?.login === 'string' &&\n    typeof u?.id === 'number' &&\n    typeof u?.nodeId === 'string' &&\n    typeof u?.avatarUrl === 'string' &&\n    typeof u?.gravatarId === 'string' &&\n    typeof u?.url === 'string' &&\n    typeof u?.htmlUrl === 'string' &&\n    typeof u?.followersUrl === 'string' &&\n    typeof u?.followingUrl === 'string' &&\n    typeof u?.gistsUrl === 'string' &&\n    typeof u?.starredUrl === 'string' &&\n    typeof u?.subscriptionsUrl === 'string' &&\n    typeof u?.organizationsUrl === 'string' &&\n    typeof u?.reposUrl === 'string' &&\n    typeof u?.eventsUrl === 'string' &&\n    typeof u?.receivedEventsUrl === 'string' &&\n    typeof u?.type === 'string' &&\n    typeof u?.siteAdmin === 'boolean'\n  );\n};\n\nconst isUsers = (args: unknown[]): args is User[] =>\n  !args.some((arg) => !isUser(arg));\n  // args.every((arg) => isUser(arg));\n\nexport { isUser, isUsers };\n","import * as React from 'react';\r\nimport { DataGrid, ColDef, ValueGetterParams } from '@material-ui/data-grid';\r\n\r\nimport { FC } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n// import capitalize from 'lodash/capitalize';\r\n// import { Divider } from 'semantic-ui-react';\r\n\r\nimport { User } from 'domains/github';\r\nimport Spinner from 'components/molecules/Spinner';\r\n// import HomeButton from 'components/molecules/HomeButton';\r\n// import MemberList from 'components/organisms/MemberList';\r\n\r\nexport type Props = {\r\n  orgCode: string;\r\n  users: User[];\r\n  isLoading?: boolean;\r\n};\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'id', headerName: 'ID', width: 140 },\r\n  { field: 'url', headerName: 'url', width: 280 },\r\n  { field: 'login', headerName: 'login', width: 130 },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params: ValueGetterParams) =>\r\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n];\r\n\r\n// export default function DataTable() {\r\nexport const DataTable: FC = () => {\r\n  return (\r\n    <div style={{ height: 540 }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection disableColumnMenu />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Demo: FC<Props> = ({\r\n  orgCode = 'UnknownCompany',\r\n  users = [],\r\n  isLoading = false,\r\n}) => {\r\n  // const title = `${capitalize(orgCode)} の開発メンバー`;\r\n\r\n  return (\r\n    <>\r\n    <div style={{ height: 540 }}>\r\n      <DataGrid rows={users} columns={columns} pageSize={5} checkboxSelection disableColumnMenu />\r\n    </div>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n        {/* <h1>{orgCode}</h1> */}\r\n      {/* {isLoading ? <Spinner /> : <MemberList users={users} />}\r\n      <Divider hidden />\r\n      <HomeButton /> */}\r\n    </>\r\n  );\r\n};\r\n\r\n// export default Demo;","// import React from 'react';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { User, getMembers } from 'domains/github';\r\n// import { userSlice, UserState } from 'features/user';\r\nimport { userSlice, UserState, MultiState } from 'features/user';\r\n\r\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\r\nimport { fade, makeStyles, withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n// import Demo from \"containers/templates/Demo\";\r\nimport { Demo } from \"components/templates/Demo\";\r\nimport { Link } from 'react-router-dom';\r\nimport usemembersGotten from 'hooks/use-get-members';\r\n\r\nfunction MinusSquare(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props: SvgIconProps) {\r\n  return (\r\n    <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      {/* <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" /> */}\r\n      <path d=\"M17.237,3.056H2.93c-0.694,0-1.263,0.568-1.263,1.263v8.837c0,0.694,0.568,1.263,1.263,1.263h4.629v0.879c-0.015,0.086-0.183,0.306-0.273,0.423c-0.223,0.293-0.455,0.592-0.293,0.92c0.07,0.139,0.226,0.303,0.577,0.303h4.819c0.208,0,0.696,0,0.862-0.379c0.162-0.37-0.124-0.682-0.374-0.955c-0.089-0.097-0.231-0.252-0.268-0.328v-0.862h4.629c0.694,0,1.263-0.568,1.263-1.263V4.319C18.5,3.625,17.932,3.056,17.237,3.056 M8.053,16.102C8.232,15.862,8.4,15.597,8.4,15.309v-0.89h3.366v0.89c0,0.303,0.211,0.562,0.419,0.793H8.053z M17.658,13.156c0,0.228-0.193,0.421-0.421,0.421H2.93c-0.228,0-0.421-0.193-0.421-0.421v-1.263h15.149V13.156z M17.658,11.052H2.509V4.319c0-0.228,0.193-0.421,0.421-0.421h14.308c0.228,0,0.421,0.193,0.421,0.421V11.052z\"></path>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props: TransitionProps) {\r\n  const style = useSpring({\r\n    from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n    to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={style}>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nconst StyledTreeItem = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 7,\r\n      paddingLeft: 18,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n  }),\r\n)((props: TreeItemProps) => <TreeItem {...props} TransitionComponent={TransitionComponent} />);\r\n\r\nconst useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: 600,\r\n      // maxHeight: '60%',\r\n      flexGrow: 1,\r\n      maxWidth: 380,\r\n      borderRight: '1px solid gray',\r\n      // scrollBehavior: 'auto'\r\n    },\r\n  }),\r\n);\r\n\r\n// const useClick = (orgCode: string) => {\r\n//   console.log(orgCode);\r\n// }\r\n\r\n// const TreeView01: React.FC = () => {\r\n// export default function CustomizedTreeView() {\r\n// export const TreeView01: React.FC<{ orgCodes: string[] }> = ({ orgCodes = [] }) => (  \r\nexport const TreeView01: FC<{ orgCodes?: string[] }> = ({ orgCodes = [] }) => {\r\n  const [orgCode, setOrgCode] = useState(\"\");\r\n  // const orgCode = useSelector<MultiState, string>((state) => state.orgCode); // (1)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const users = useSelector<UserState, User[]>((state) => state.users); // (1)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let isUnmounted = false;\r\n    const { membersGotten, membersClear } = userSlice.actions;\r\n\r\n    const load = async (): Promise<void> => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const users2 = await getMembers(orgCode); // eslint-disable-line no-shadow\r\n\r\n        if (!isUnmounted) {\r\n          // user.tsのmembersGottenで新たに取得したメンバ群でStoreのStateを更新している\r\n          // 結果、(1)のusersが更新される\r\n          dispatch(membersGotten({ users2, orgCode }));\r\n        }\r\n      } catch (err) {\r\n        // throw new Error(`organization '${orgCode}' not exists`);\r\n        dispatch(membersClear());\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    void load();\r\n\r\n    return () => {\r\n      isUnmounted = true;\r\n    };\r\n  }, [orgCode, dispatch]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <table style={{ width: '100%' }}>\r\n      <tbody>\r\n        <tr>\r\n          <td style={{ width: '20%' }}>\r\n            <TreeView\r\n              className={classes.root}\r\n              defaultExpanded={['1']}\r\n              defaultCollapseIcon={<MinusSquare />}\r\n              defaultExpandIcon={<PlusSquare />}\r\n              defaultEndIcon={<CloseSquare />}\r\n            >\r\n              <StyledTreeItem nodeId=\"1\" label=\"Root\" onLabelClick={() => setOrgCode(\"\") }>\r\n                <StyledTreeItem nodeId=\"2\" label=\"Hello\" onClick={() => <CloseSquare /> } onLabelClick={() => setOrgCode(\"\") } />\r\n                <StyledTreeItem nodeId=\"3\" label=\"company\">\r\n                  {orgCodes.map((orgCode, index) => (\r\n                    <StyledTreeItem key={index} nodeId={orgCode} label={orgCode} onClick={() => setOrgCode(orgCode) } />\r\n                    // <StyledTreeItem key={index} nodeId={orgCode} label={orgCode} />\r\n                  ))}\r\n                </StyledTreeItem>\r\n              </StyledTreeItem>\r\n            </TreeView>\r\n          </td>\r\n          <td style={{ width: '80%', position: 'relative', top: -28 }}>\r\n          <Demo {...{ orgCode, users, isLoading }} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n  // }\r\n};\r\n\r\n\r\n// export default TreeView01;","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {TreeView01} from \"./TreeView01\";\r\n// import Demo from \"./Demo\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Noto Sans JP\",\r\n      \"Lato\",\r\n      \"游ゴシック Medium\",\r\n      \"游ゴシック体\",\r\n      \"Yu Gothic Medium\",\r\n      \"YuGothic\",\r\n      \"ヒラギノ角ゴ ProN\",\r\n      \"Hiragino Kaku Gothic ProN\",\r\n      \"メイリオ\",\r\n      \"Meiryo\",\r\n      \"ＭＳ Ｐゴシック\",\r\n      \"MS PGothic\",\r\n      \"sans-serif\",\r\n    ].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: { main: colors.blue[800] }, // テーマの色\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    drawerPaper: {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: \"100vh\",\r\n      overflow: \"auto\",\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      overflow: \"auto\",\r\n      flexDirection: \"column\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    test1: {\r\n      paddingTop: 100,\r\n    },\r\n  })\r\n);\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        管理画面\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport interface GenericTemplateProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n}\r\n\r\nconst GenericTemplate: React.FC<GenericTemplateProps> = ({\r\n  children,\r\n  title,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n    <div><TreeView01 /></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenericTemplate;\r\n","import React from \"react\";\r\nimport GenericTemplate from \"../templates/GenericTemplate\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst createData = (\r\n  name: string,\r\n  category: string,\r\n  weight: number,\r\n  price: number\r\n) => {\r\n  return { name, category, weight, price };\r\n};\r\n\r\nconst rows = [\r\n  createData(\"チョコレート\", \"お菓子\", 100, 120),\r\n  createData(\"ケーキ\", \"お菓子\", 400, 480),\r\n  createData(\"りんご\", \"フルーツ\", 500, 360),\r\n  createData(\"バナナ\", \"フルーツ\", 200, 300),\r\n  createData(\"みかん\", \"フルーツ\", 250, 180),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GenericTemplate title=\"商品ページ\">\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>商品名</TableCell>\r\n              <TableCell align=\"right\">カテゴリー</TableCell>\r\n              <TableCell align=\"right\">重量(g)</TableCell>\r\n              <TableCell align=\"right\">価格(円)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.category}</TableCell>\r\n                <TableCell align=\"right\">{row.weight}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </GenericTemplate>\r\n  );\r\n};\r\n\r\nexport default ProductPage;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    toolbar: {\r\n      minHeight: '10px'\r\n    },\r\n    // menuButton: {\r\n    //   marginRight: theme.spacing(2),\r\n    // },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Header\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { SlowMotionVideo } from '@material-ui/icons';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3} style={{height: 160, border: '1px solid gray'}}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  TabPanel: {\r\n\r\n  }\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"アラーム表示\" {...a11yProps(0)} />\r\n          <Tab label=\"状態表示\" {...a11yProps(1)} />\r\n          <Tab label=\"ユーザー管理\" {...a11yProps(2)} />\r\n          <Tab label=\"処理ログ\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        アラーム表示\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        状態表示\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        ユーザー管理\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        処理ログ\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","const orgCodes = [\n  'airbnb',\n  'apple',\n  'facebook',\n  'google',\n  'microsoft',\n  'mozilla',\n  'netflix',\n  'netlify',\n];\n\nexport default orgCodes;\n","import { FC } from 'react';\n\nimport {TreeView01} from 'components/templates/TreeView01';\nimport orgCodes from 'data/org-codes';\n\nconst EnhancedHome: FC = () => <TreeView01 orgCodes={orgCodes} />;\n\nexport default EnhancedHome;\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      position: 'fixed',\r\n      width:'100%',\r\n      height:'36px',\r\n      bottom:'0',\r\n      textAlign: 'center',\r\n      backgroundColor: '#aaaaaa',\r\n      color:'white',\r\n      zIndex: 1000\r\n    },\r\n    toolbar: {\r\n      minHeight: '10px'\r\n    },\r\n    // menuButton: {\r\n    //   marginRight: theme.spacing(2),\r\n    // },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ButtonAppFooterBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <AppBar> */}\r\n        <Toolbar className={classes.toolbar}>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Footer\r\n          </Typography>\r\n        </Toolbar>\r\n      {/* </AppBar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../templates/Header\";\r\nimport Menu from \"../templates/Menu\";\r\n// import {TreeView01} from \"components/templates/TreeView01\";\r\nimport TreeView01 from \"containers/templates/TreeView01\";\r\n// import GenericTemplate from \"../templates/GenericTemplate\";\r\nimport Demo from \"containers/templates/Demo\";\r\nimport Footer from \"../templates/Footer\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Menu />\r\n      <TreeView01 />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { User, getMembers } from 'domains/github';\nimport { userSlice, UserState } from 'features/user';\n\ntype ReturnValue = {\n  users: User[];\n  isLoading: boolean;\n};\n\nconst useGetMembers = (orgCode: string): ReturnValue => {\n  const [isLoading, setIsLoading] = useState(false);\n  const users = useSelector<UserState, User[]>((state) => state.users); // (1)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let isUnmounted = false;\n    const { membersGotten } = userSlice.actions;\n\n    const load = async (): Promise<void> => {\n      setIsLoading(true);\n\n      try {\n        const users2 = await getMembers(orgCode); // eslint-disable-line no-shadow\n\n        if (!isUnmounted) {\n          // user.tsのmembersGottenで新たに取得したメンバ郡でStoreのStateを更新している\n          // 結果、(1)のusersが更新される\n          // dispatch(membersGotten({ users2 }));\n          dispatch(membersGotten({ users2, orgCode }));\n        }\n      } catch (err) {\n        throw new Error(`organization '${orgCode}' not exists`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    void load();\n\n    return () => {\n      isUnmounted = true;\n    };\n  }, [orgCode, dispatch]);\n\n  return { users, isLoading }; // (1)\n};\n\nexport default useGetMembers;\n","import { FC } from 'react';\nimport { useParams } from 'react-router';\n\nimport usemembersGotten from 'hooks/use-get-members';\n// import Members from 'components/templates/Members';\nimport {DataTable, Demo} from 'components/templates/Demo';\n\n// const EnhancedMembers: FC<{ orgCode?: string }> = ({ orgCode }) => {\nconst EnhancedMembers: FC = () => {  \n  const { orgCode = '' } = useParams() as { orgCode: string; };\n\n  if (orgCode) {\n    const { users, isLoading } = usemembersGotten(orgCode);\n    return <Demo {...{ orgCode, users, isLoading }} />;\n    // return <Demo {orgCode, users, isLoading } />;\n    // return <DataTable />;\n  } else {\n    // return <DataTable />;\n    return <Demo orgCode={'zero'} users={[]} isLoading={false}  />;\n  }\n\n\n  // return <Members {...{ orgCode, users, isLoading }} />;\n  // return <Demo {...{ orgCode, users, isLoading }} />;\n};\n\nexport default EnhancedMembers;\n","const NotFound = () => {\r\n  return (\r\n    <div>404 Not Found</div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ProductPage from \"./components/pages/ProductPage\";\nimport HomePage from \"components/pages/HomePage\";\nimport Demo from \"containers/templates/Demo\";\nimport NotFound from \"components/pages/NotFound\";\nimport orgCodes from \"data/org-codes\";\n\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        {/* <Route path=\"/test\" component={TreeView01} exact /> */}\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/:orgCode/members\" component={Demo} />\n        <Route path=\"/products\" component={ProductPage} exact />\n        {/* <Route path=\"/test\" component={Demo} exact /> */}\n        {/* <Route path=\"/:orgCode/members\" element={<Members />} /> */}\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport { userSlice } from 'features/user';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore({\n  reducer: userSlice.reducer,\n  middleware: [...getDefaultMiddleware({ thunk: false })],\n});\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  // </React.StrictMode>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}